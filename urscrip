def driverProg():
	MULT_jointstate=xxx
	SERVO_IDLE = 0
	SERVO_RUNNING = 1
	cmd_servo_state = SERVO_IDLE
	cmd_servo_q = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
	

	def set_servo_setpoint(q):
		enter_critical
		cmd_servo_state = SERVO_RUNNING
		cmd_servo_q = q
		exit_critical
	end

	thread servoThread():
		state = SERVO_IDLE
		while True:
			enter_critical
			q = cmd_servo_q
			do_brake = False
			if (state == SERVO_RUNNING) and (cmd_servo_state == SERVO_IDLE):
				do_brake = True
			end
			state = cmd_servo_state
			cmd_servo_state = SERVO_IDLE
			exit_critical
		
			if do_brake:
				stopj(1.0)
				sync()
			elif state == SERVO_RUNNING:
				servoj(q, t=%.4f, lookahead_time=%.4f, gain=%.0f)
			else:
				sync()
			end
		end
	end

	socket_open(\"%s\", %i)
	thread_servo = run servoThread()

	keepalive = 1
	
	while keepalive > 0:
		params_mult = socket_read_binary_integer(6+1)
		if params_mult[0] > 0:
			q = [params_mult[1] / MULT_jointstate,
				params_mult[2] / MULT_jointstate,
				params_mult[3] / MULT_jointstate,
				params_mult[4] / MULT_jointstate,
				params_mult[5] / MULT_jointstate,
				params_mult[6] / MULT_jointstate]
			keepalive = params_mult[7]
			set_servo_setpoint(q)
		end
	end
	
	sleep(0.1)
	socket_close()
	kill thread_servo
end
		
